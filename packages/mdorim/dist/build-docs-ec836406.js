import e from"path";import i from"fs";import{merge as t}from"lodash";var o={$schema:"http://json-schema.org/draft-04/schema#",description:"Definições de metadados utilizados no MDORIM.",definitions:{ID:{description:"Identificador único do conceito. É um `integer` gerado automaticamente.",type:"integer",map:{"schema.org":"http://schema.org/identifier","linked.art":"http://linked.art/ns/terms/identifier",crm:"http://www.cidoc-crm.org/cidoc-crm/P1_is_identified_by"}},URI:{description:"Identificador único do conceito. É um `string` gerado automaticamente.",type:"string",map:{"schema.org":"http://schema.org/identifier","linked.art":"http://linked.art/ns/terms/identifier",crm:"http://www.cidoc-crm.org/cidoc-crm/P1_is_identified_by"}},type:{description:"Tipo do conceito. É um `string` gerado automaticamente baseado no tipo da classe",type:"string",map:{"schema.org":"http://schema.org/type","linked.art":"_type",crm:"http://www.cidoc-crm.org/cidoc-crm/P2_has_type"}},slug:{description:"Nome do conceito. É um `string` gerado automaticamente.",type:"string",map:{"schema.org":"http://schema.org/name","linked.art":"http://www.w3.org/2000/01/rdf-schema#label",crm:"http://www.cidoc-crm.org/cidoc-crm/P1_is_identified_by"}},identified_by:{description:"Define o nome ou identificador de uma entidade. Pode ser `Name` ou `Identifier`.",type:"array",items:{anyOf:[{$ref:"#/definitions/Name"},{$ref:"#/definitions/Identifier"}]}},Identifier:{title:"Identifier",description:"Identificador de uma entidade.",type:"object",properties:{type:{description:"Tipo do identificador. Valor constante: `Identifier`.",type:"string",const:"Identifier"},value:{description:"Valor do identificador.",type:"string"},classified_as:{$ref:"../schemas/concept.schema.json#/definitions/ConceptRef"}},required:["type","value"],map:{"schema.org":"http://schema.org/identifier","linked.art":"http://linked.art/ns/terms/identifier",crm:"http://www.cidoc-crm.org/cidoc-crm/P1_is_identified_by"}}}};const n=(e,i="\n\n")=>e.filter((e=>""!==e)).join(i),r=(e,i)=>n(["---",`title: "${e}"`,`description: ${i}`,"---"],"\n"),s=e=>n([`:::${e.type} ${e.title}`,e.description,":::"]),a=e=>{let i="",[t,o]=e.split("#");const[n,r,s]=t.split("/");t&&(i=`./${s.split(".")[0]}.md`),o.startsWith("/")&&(o=o.slice(1));const[a,c]=o.split("/");return i+=`#${c}`,i=`[${c}](${i.toLocaleLowerCase()})`,console.log({link:i,base:t,topicBase:o,path:r,file:s,definitions:a,topic:c}),i},c=e=>{const i=e,t=e,o=e;switch(e.type){case"array":return"anyOf"in i.items?`> tipo \`${t.type}\` anyOf<${t.items.anyOf.map((e=>{if("$ref"in e)return`${a(e.$ref)}`})).join(" | ")}>`:"oneOf"in i.items?`> tipo \`${o.type}\` oneOf<${o.items.oneOf.map((e=>{if("$ref"in e)return`${a(e.$ref)}`})).join(" | ")}>`:`> tipo \`${i.type}\``;case"object":return`> tipo \`${e.type}\` com propriedades`;case"null":return`> tipo \`${e.type}\` (nulo)`;default:return`> tipo \`${e.type}\``}},d=e=>e.properties?n(["#### Propriedades",n(["| Nome | Tipo | Descrição | Obrigatório? |","| ---- | ---- | --------- | ------------ |",...Object.entries(e.properties).map((([i,t])=>{if("$ref"in t){return`| ${a(t.$ref)} |  |  | ${e.required&&e.required.includes(i)?"Sim":"Não"} |`}return`| ${i} | ${t.type} | ${t.description} | ${e.required&&e.required.includes(i)?"Sim":"Não"} |`}))],"\n")]):"";var m={"@context":[{schema:"http://schema.org/"}],"@type":"WebPage",title:"User",description:"Definição de um usuário do Elucidário.art",status:{type:"warning",title:"Em desenvolvimento",description:"página em desenvolvimento"},mainEntity:{"@type":"DigitalDocument",$ref:"../schemas/user.schema.json"}},p={$schema:"http://json-schema.org/draft-04/schema#",title:"Concept",description:"Utilizado para descrever conceitos como tipos, materiais, linguagens, medidas, entre outros tipos de conceitos. Funciona como um vocabulário controlado. É amplamente baseado no endpoint Concept do Linked Art.\n\nOs Conceitos podem ser definidos como termos únicos ou como agrupamentos ou coleções de termos que compartilham algo em comum, em estruturas de tesauros esses agrupamentos são os termos definidos entre sinais de maior e menor, por exemplo: __nomes e conceitos relacionados__ no Getty AAT.\n\nPor padrão o MDORIM vem com alguns conceitos pré-definidos baseados inteiramente em ontologias como FOAF e vocabulários do Getty. Os conceitos pré-definidos seguem o mesmo modelo do Concept e são criados automaticamente na instalação do Elucidário.art. Esses conceitos são utilizados para facilitar a integração do modelo com a interface de usuário, servindo também como exemplo de como definir novos conceitos no app.",type:"object",mainEntity:{"@type":"DigitalDocument",$ref:"../schemas/concept.schema.json"},status:{type:"warning",title:"Em desenvolvimento",description:"Em desenvolvimento"}},l=Object.freeze({__proto__:null,Concept:p,User:m});const f="./docs",u=t=>JSON.parse(i.readFileSync(e.join(__dirname,"json/",t),"utf8")),y=e=>{if("mainEntity"in e){const i=e.mainEntity,o=u(i.$ref),n=t({},e,{mainEntity:{ref:o}});return"$ref"in n.mainEntity&&delete n.mainEntity.$ref,n}return null},g=i.readFileSync(e.join(__dirname,"pages","home.md"),"utf8"),$=e.join(__dirname,"..",f,"home.md");i.writeFileSync($,g);const h=n([r("Metadata",(_=o).description),"# Metadados",_.description,"## Definições",...Object.entries(_.definitions).map((([e,i])=>((e,i,t)=>{return n([`### \`${e}\``,c(i),i.description,d(i),(o=i.map,o?n(["#### Mapeamento",n(["| Vocabulário | Link |","| ----------- | ---- |",...Object.entries(o).map((([e,i])=>`| ${e} | <${i}> |`))],"\n")]):""),t?`> [Voltar para ${t}](#${t})`:"","---"]);var o})(e,i,"metadados")))]);var _;const w=e.join(__dirname,"..",f,"metadata.md");i.writeFileSync(w,h),Object.entries(l).map((([t,o])=>{const m=y(o);if(m){const o=(e=>n([r(`${e.title}`,`${e.title}`),`# ${e.title}`,s(e.status),"## Descrição",e.description,"---","## Classes",n(Object.entries(e.mainEntity.ref.definitions).map((([e,i])=>n([`### \`${i.title}\``,i.type?c(i):"",i.description,i.$ref?a(i.$ref):"",d(i),"---"]))))]))(m),p=e.join(__dirname,"..",f,`${t}.md`);i.writeFileSync(p,o)}}));export{y as d,u as g,o as m};
//# sourceMappingURL=build-docs-ec836406.js.map
